<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						 http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 以下页面或请求不被拦截 -->
	<http pattern="/register.html" security="none"/>
	<http pattern="/shoplogin.html" security="none"/>
	<http pattern="/shoplogin_error.html" security="none"/>
	<http pattern="/assets/**" security="none"/>
	<http pattern="/css/**" security="none"/>
	<http pattern="/data/**" security="none"/>
	<http pattern="/img/**" security="none"/>
	<http pattern="/js/**" security="none"/>
	<http pattern="/plugins/**" security="none"/>
	<http pattern="/seller/add" security="none"/>



	<!-- 页面或者请求拦截规则 -->
	<http use-expressions="false">
		<!--访问项目所有请求时必须有登录人 并且当前登录人还需要有ROLE_ADMIN的角色-->
		<intercept-url pattern="/**" access="ROLE_ADMIN" />
		<form-login 
		     login-page="/shoplogin.html"
		     default-target-url="/admin/index.html"
			 authentication-failure-url="/shoplogin_error.html"
			 always-use-default-target="true" />
		<csrf disabled="true" />
		<!--csrf 跨站请求伪造 是一种攻击网站的方式-->
		<!-- iframe策略 -->
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
		<!--logout-url="/logout"  默认-->
		<logout  logout-success-url="/login.html"/>
	</http>

	<!-- 引用dubbo 服务 -->
	<dubbo:application name="pinyougou-shop-web" />
	<dubbo:registry address="zookeeper://192.168.25.129:2181"/>

	<dubbo:reference id="sellerService" interface="com.pyg.sellergoods.service.SellerService" />


	<!--自定义的认证类-->
	<beans:bean id="userDetailsService" class="com.pyg.shop.UserDetailsServiceImpl">
       <beans:property name="sellerService" ref="sellerService"/>
	</beans:bean>

	<!--用此对象对密码解密-->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<!-- 认证管理器 -->
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>
</beans:beans>